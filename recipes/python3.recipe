# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

import shutil

class Recipe(recipe.Recipe):
    name = 'Python'
    version = '3.3.5'
    stype = SourceType.TARBALL
    url = ""
    # Python Software Foundation License
    licenses = [License.BSD_like]
    deps = ['libffi', 'sqlite']
    configure_options = '--enable-loadable-sqlite-extensions --enable-shared '

    files_python = [
         'plistlib.py',
         'functools.py',
         'nntplib.py',
         '_dummy_thread.py',
         'glob.py',
         'ntpath.py',
         '_markupbase.py',
         '_compat_pickle.py',
         'sndhdr.py',
         'site.py',
         'numbers.py',
         'LICENSE.txt',
         'formatter.py',
         'mimetypes.py',
         'csv.py',
         'modulefinder.py',
         'getpass.py',
         'pkgutil.py',
         'optparse.py',
         'ipaddress.py',
         'struct.py',
         'pipes.py',
         'macurl2path.py',
         'quopri.py',
         'xdrlib.py',
         'dis.py',
         'crypt.py',
         'lzma.py',
         'telnetlib.py',
         'shelve.py',
         'reprlib.py',
         'cProfile.py',
         're.py',
         'cgitb.py',
         'socket.py',
         'gzip.py',
         'inspect.py',
         'codeop.py',
         'queue.py',
         'textwrap.py',
         'genericpath.py',
         'dummy_threading.py',
         'ast.py',
         'symtable.py',
         'threading.py',
         'weakref.py',
         'string.py',
         'fileinput.py',
         'keyword.py',
         'cmd.py',
         'asyncore.py',
         'smtplib.py',
         'os2emxpath.py',
         'py_compile.py',
         'zipfile.py',
         'getopt.py',
         '__future__.py',
         'stat.py',
         'aifc.py',
         'locale.py',
         'contextlib.py',
         'os.py',
         'trace.py',
         'pickletools.py',
         '_sysconfigdata.py',
         'shlex.py',
         'this.py',
         'pyclbr.py',
         'hmac.py',
         'fnmatch.py',
         'socketserver.py',
         '_strptime.py',
         'sre_compile.py',
         'gettext.py',
         'code.py',
         'colorsys.py',
         'binhex.py',
         'mailcap.py',
         'compileall.py',
         'stringprep.py',
         'codecs.py',
         'subprocess.py',
         'bz2.py',
         'sysconfig.py',
         '_weakrefset.py',
         'asynchat.py',
         '_pyio.py',
         'pydoc.py',
         'fractions.py',
         'filecmp.py',
         'symbol.py',
         'tarfile.py',
         'copyreg.py',
         'wave.py',
         'uuid.py',
         'bisect.py',
         'io.py',
         '_osx_support.py',
         'argparse.py',
         'sre_parse.py',
         'sunau.py',
         'cgi.py',
         'imaplib.py',
         'datetime.py',
         'pty.py',
         'timeit.py',
         'chunk.py',
         'doctest.py',
         'pprint.py',
         'runpy.py',
         'pickle.py',
         'tempfile.py',
         'calendar.py',
         'tty.py',
         'opcode.py',
         'traceback.py',
         'tabnanny.py',
         'poplib.py',
         'macpath.py',
         'mailbox.py',
         'tokenize.py',
         'decimal.py',
         '_threading_local.py',
         'turtle.py',
         'copy.py',
         'sched.py',
         'antigravity.py',
         'heapq.py',
         'pdb.py',
         'platform.py',
         'random.py',
         'ssl.py',
         'ftplib.py',
         'imp.py',
         'base64.py',
         'netrc.py',
         'webbrowser.py',
         'sre_constants.py',
         'hashlib.py',
         'difflib.py',
         'linecache.py',
         'imghdr.py',
         'shutil.py',
         'configparser.py',
         'posixpath.py',
         'abc.py',
         'profile.py',
         'smtpd.py',
         'pstats.py',
         'types.py',
         'nturl2path.py',
         '__phello__.foo.py',
         'rlcompleter.py',
         'uu.py',
         'warnings.py',
         'bdb.py',
         'token.py',
         'wsgiref/headers.py',
         'wsgiref/util.py',
         'wsgiref/__init__.py',
         'wsgiref/handlers.py',
         'wsgiref/simple_server.py',
         'wsgiref/validate.py',
         'dbm/dumb.py',
         'dbm/gnu.py',
         'dbm/__init__.py',
         'dbm/ndbm.py',
         'urllib/request.py',
         'urllib/__init__.py',
         'urllib/robotparser.py',
         'urllib/parse.py',
         'urllib/error.py',
         'urllib/response.py',
         'lib-dynload/_sha1%(pext)s',
         'lib-dynload/resource%(pext)s',
         'lib-dynload/_bz2%(pext)s',
         'lib-dynload/_lzma%(pext)s',
         'lib-dynload/zlib%(pext)s',
         'lib-dynload/_codecs_cn%(pext)s',
         'lib-dynload/array%(pext)s',
         'lib-dynload/_heapq%(pext)s',
         'lib-dynload/_pickle%(pext)s',
         'lib-dynload/_dbm%(pext)s',
         'lib-dynload/_sqlite3%(pext)s',
         'lib-dynload/cmath%(pext)s',
         'lib-dynload/_lsprof%(pext)s',
         'lib-dynload/_json%(pext)s',
         'lib-dynload/_codecs_jp%(pext)s',
         'lib-dynload/_sha512%(pext)s',
         'lib-dynload/atexit%(pext)s',
         'lib-dynload/xxlimited%(pext)s',
         'lib-dynload/_multibytecodec%(pext)s',
         'lib-dynload/parser%(pext)s',
         'lib-dynload/_md5%(pext)s',
         'lib-dynload/_csv%(pext)s',
         'lib-dynload/grp%(pext)s',
         'lib-dynload/select%(pext)s',
         'lib-dynload/_elementtree%(pext)s',
         'lib-dynload/_posixsubprocess%(pext)s',
         'lib-dynload/_codecs_kr%(pext)s',
         'lib-dynload/time%(pext)s',
         'lib-dynload/binascii%(pext)s',
         'lib-dynload/termios%(pext)s',
         'lib-dynload/_sha256%(pext)s',
         'lib-dynload/_ctypes%(pext)s',
         'lib-dynload/_multiprocessing%(pext)s',
         'lib-dynload/ossaudiodev%(pext)s',
         'lib-dynload/pyexpat%(pext)s',
         'lib-dynload/math%(pext)s',
         'lib-dynload/_ctypes_test%(pext)s',
         'lib-dynload/_crypt%(pext)s',
         'lib-dynload/_datetime%(pext)s',
         'lib-dynload/mmap%(pext)s',
         'lib-dynload/_codecs_hk%(pext)s',
         'lib-dynload/_gdbm%(pext)s',
         'lib-dynload/_bisect%(pext)s',
         'lib-dynload/spwd%(pext)s',
         'lib-dynload/_testbuffer%(pext)s',
         'lib-dynload/_testcapi%(pext)s',
         'lib-dynload/nis%(pext)s',
         'lib-dynload/audioop%(pext)s',
         'lib-dynload/_decimal%(pext)s',
         'lib-dynload/_socket%(pext)s',
         'lib-dynload/syslog%(pext)s',
         'lib-dynload/_codecs_iso2022%(pext)s',
         'lib-dynload/_random%(pext)s',
         'lib-dynload/_struct%(pext)s',
         'lib-dynload/_codecs_tw%(pext)s',
         'lib-dynload/unicodedata%(pext)s',
         'lib-dynload/fcntl%(pext)s',
         'multiprocessing/reduction.py',
         'multiprocessing/util.py',
         'multiprocessing/heap.py',
         'multiprocessing/managers.py',
         'multiprocessing/__init__.py',
         'multiprocessing/queues.py',
         'multiprocessing/synchronize.py',
         'multiprocessing/sharedctypes.py',
         'multiprocessing/process.py',
         'multiprocessing/pool.py',
         'multiprocessing/forking.py',
         'multiprocessing/connection.py',
         'multiprocessing/dummy/__init__.py',
         'multiprocessing/dummy/connection.py',
         'ctypes/wintypes.py',
         'ctypes/util.py',
         'ctypes/_endian.py',
         'ctypes/__init__.py',
         'ctypes/macholib/fetch_macholib.bat',
         'ctypes/macholib/README.ctypes',
         'ctypes/macholib/__init__.py',
         'ctypes/macholib/dylib.py',
         'ctypes/macholib/dyld.py',
         'ctypes/macholib/framework.py',
         'ctypes/macholib/fetch_macholib',
         'xml/__init__.py',
         'xml/etree/ElementInclude.py',
         'xml/etree/ElementPath.py',
         'xml/etree/__init__.py',
         'xml/etree/ElementTree.py',
         'xml/etree/cElementTree.py',
         'xml/dom/minidom.py',
         'xml/dom/__init__.py',
         'xml/dom/NodeFilter.py',
         'xml/dom/xmlbuilder.py',
         'xml/dom/pulldom.py',
         'xml/dom/minicompat.py',
         'xml/dom/expatbuilder.py',
         'xml/dom/domreg.py',
         'xml/sax/xmlreader.py',
         'xml/sax/saxutils.py',
         'xml/sax/handler.py',
         'xml/sax/__init__.py',
         'xml/sax/expatreader.py',
         'xml/sax/_exceptions.py',
         'xml/parsers/__init__.py',
         'xml/parsers/expat.py',
         'http/server.py',
         'http/__init__.py',
         'http/cookies.py',
         'http/client.py',
         'http/cookiejar.py',
         'idlelib/config-main.def',
         'idlelib/ToolTip.py',
         'idlelib/extend.txt',
         'idlelib/idle.pyw',
         'idlelib/help.txt',
         'idlelib/ObjectBrowser.py',
         'idlelib/configSectionNameDialog.py',
         'idlelib/MultiStatusBar.py',
         'idlelib/config-extensions.def',
         'idlelib/TODO.txt',
         'idlelib/dynOptionMenuWidget.py',
         'idlelib/AutoComplete.py',
         'idlelib/idlever.py',
         'idlelib/SearchEngine.py',
         'idlelib/AutoExpand.py',
         'idlelib/UndoDelegator.py',
         'idlelib/__main__.py',
         'idlelib/configHandler.py',
         'idlelib/AutoCompleteWindow.py',
         'idlelib/FormatParagraph.py',
         'idlelib/tabbedpages.py',
         'idlelib/CREDITS.txt',
         'idlelib/RstripExtension.py',
         'idlelib/WindowList.py',
         'idlelib/PyParse.py',
         'idlelib/aboutDialog.py',
         'idlelib/TreeWidget.py',
         'idlelib/PyShell.py',
         'idlelib/__init__.py',
         'idlelib/config-keys.def',
         'idlelib/EditorWindow.py',
         'idlelib/StackViewer.py',
         'idlelib/ReplaceDialog.py',
         'idlelib/run.py',
         'idlelib/CodeContext.py',
         'idlelib/idle.py',
         'idlelib/RemoteObjectBrowser.py',
         'idlelib/WidgetRedirector.py',
         'idlelib/OutputWindow.py',
         'idlelib/MultiCall.py',
         'idlelib/IOBinding.py',
         'idlelib/textView.py',
         'idlelib/ScrolledList.py',
         'idlelib/config-highlight.def',
         'idlelib/IdleHistory.py',
         'idlelib/ScriptBinding.py',
         'idlelib/Percolator.py',
         'idlelib/HISTORY.txt',
         'idlelib/Bindings.py',
         'idlelib/CallTips.py',
         'idlelib/keybindingDialog.py',
         'idlelib/HyperParser.py',
         'idlelib/ParenMatch.py',
         'idlelib/PathBrowser.py',
         'idlelib/Delegator.py',
         'idlelib/configHelpSourceEdit.py',
         'idlelib/NEWS.txt',
         'idlelib/ChangeLog',
         'idlelib/CallTipWindow.py',
         'idlelib/SearchDialog.py',
         'idlelib/README.txt',
         'idlelib/macosxSupport.py',
         'idlelib/FileList.py',
         'idlelib/rpc.py',
         'idlelib/GrepDialog.py',
         'idlelib/ClassBrowser.py',
         'idlelib/SearchDialogBase.py',
         'idlelib/ZoomHeight.py',
         'idlelib/ColorDelegator.py',
         'idlelib/idle.bat',
         'idlelib/Debugger.py',
         'idlelib/RemoteDebugger.py',
         'idlelib/configDialog.py',
         'idlelib/Icons/python.gif',
         'idlelib/Icons/idle.ico',
         'idlelib/Icons/idle_48.gif',
         'idlelib/Icons/idle.icns',
         'idlelib/Icons/idle_16.png',
         'idlelib/Icons/idle_32.png',
         'idlelib/Icons/idle_48.png',
         'idlelib/Icons/tk.gif',
         'idlelib/Icons/idle_16.gif',
         'idlelib/Icons/folder.gif',
         'idlelib/Icons/minusnode.gif',
         'idlelib/Icons/openfolder.gif',
         'idlelib/Icons/idle_32.gif',
         'idlelib/Icons/plusnode.gif',
         'idlelib/idle_test/mock_tk.py',
         'idlelib/idle_test/__init__.py',
         'idlelib/idle_test/mock_idle.py',
         'idlelib/idle_test/README.txt',
         'sqlite3/dbapi2.py',
         'sqlite3/__init__.py',
         'sqlite3/dump.py',
         'xmlrpc/server.py',
         'xmlrpc/__init__.py',
         'xmlrpc/client.py',
         'concurrent/__init__.py',
         'concurrent/futures/_base.py',
         'concurrent/futures/thread.py',
         'concurrent/futures/__init__.py',
         'concurrent/futures/process.py',
         'tkinter/dialog.py',
         'tkinter/constants.py',
         'tkinter/font.py',
         'tkinter/colorchooser.py',
         'tkinter/__main__.py',
         'tkinter/scrolledtext.py',
         'tkinter/__init__.py',
         'tkinter/_fix.py',
         'tkinter/simpledialog.py',
         'tkinter/tix.py',
         'tkinter/commondialog.py',
         'tkinter/messagebox.py',
         'tkinter/filedialog.py',
         'tkinter/dnd.py',
         'tkinter/ttk.py',
         'config-3.3m/Makefile',
         'config-3.3m/config.c',
         'config-3.3m/install-sh',
         'config-3.3m/Setup',
         'config-3.3m/Setup.config',
         'config-3.3m/config.c.in',
         'config-3.3m/Setup.local',
         'config-3.3m/makesetup',
         'json/encoder.py',
         'json/__init__.py',
         'json/decoder.py',
         'json/scanner.py',
         'json/tool.py',
         'importlib/util.py',
         'importlib/__init__.py',
         'importlib/_bootstrap.py',
         'importlib/machinery.py',
         'importlib/abc.py',
         'html/parser.py',
         'html/__init__.py',
         'html/entities.py',
         'distutils/text_file.py',
         'distutils/log.py',
         'distutils/README',
         'distutils/dist.py',
         'distutils/fancy_getopt.py',
         'distutils/util.py',
         'distutils/core.py',
         'distutils/cygwinccompiler.py',
         'distutils/emxccompiler.py',
         'distutils/cmd.py',
         'distutils/msvc9compiler.py',
         'distutils/spawn.py',
         'distutils/msvccompiler.py',
         'distutils/__init__.py',
         'distutils/archive_util.py',
         'distutils/extension.py',
         'distutils/dir_util.py',
         'distutils/versionpredicate.py',
         'distutils/sysconfig.py',
         'distutils/file_util.py',
         'distutils/version.py',
         'distutils/unixccompiler.py',
         'distutils/errors.py',
         'distutils/config.py',
         'distutils/debug.py',
         'distutils/ccompiler.py',
         'distutils/dep_util.py',
         'distutils/bcppcompiler.py',
         'distutils/filelist.py',
         'distutils/command/register.py',
         'distutils/command/install_headers.py',
         'distutils/command/build_clib.py',
         'distutils/command/install_scripts.py',
         'distutils/command/bdist_dumb.py',
         'distutils/command/wininst-9.0.exe',
         'distutils/command/wininst-7.1.exe',
         'distutils/command/bdist_rpm.py',
         'distutils/command/bdist.py',
         'distutils/command/wininst-6.0.exe',
         'distutils/command/build.py',
         'distutils/command/clean.py',
         'distutils/command/build_ext.py',
         'distutils/command/install_egg_info.py',
         'distutils/command/command_template',
         'distutils/command/wininst-9.0-amd64.exe',
         'distutils/command/__init__.py',
         'distutils/command/install.py',
         'distutils/command/wininst-8.0.exe',
         'distutils/command/wininst-10.0.exe',
         'distutils/command/sdist.py',
         'distutils/command/install_data.py',
         'distutils/command/wininst-10.0-amd64.exe',
         'distutils/command/config.py',
         'distutils/command/bdist_msi.py',
         'distutils/command/check.py',
         'distutils/command/upload.py',
         'distutils/command/build_py.py',
         'distutils/command/install_lib.py',
         'distutils/command/bdist_wininst.py',
         'distutils/command/build_scripts.py',
         'turtledemo/chaos.py',
         'turtledemo/fractalcurves.py',
         'turtledemo/colormixer.py',
         'turtledemo/round_dance.py',
         'turtledemo/__main__.py',
         'turtledemo/paint.py',
         'turtledemo/yinyang.py',
         'turtledemo/about_turtle.txt',
         'turtledemo/__init__.py',
         'turtledemo/tree.py',
         'turtledemo/wikipedia.py',
         'turtledemo/penrose.py',
         'turtledemo/bytedesign.py',
         'turtledemo/minimal_hanoi.py',
         'turtledemo/clock.py',
         'turtledemo/two_canvases.py',
         'turtledemo/demohelp.txt',
         'turtledemo/turtle.cfg',
         'turtledemo/lindenmayer.py',
         'turtledemo/planet_and_moon.py',
         'turtledemo/forest.py',
         'turtledemo/nim.py',
         'turtledemo/about_turtledemo.txt',
         'turtledemo/peace.py',
         'unittest/loader.py',
         'unittest/suite.py',
         'unittest/__main__.py',
         'unittest/result.py',
         'unittest/util.py',
         'unittest/main.py',
         'unittest/signals.py',
         'unittest/mock.py',
         'unittest/__init__.py',
         'unittest/case.py',
         'unittest/runner.py',
         'logging/__init__.py',
         'logging/handlers.py',
         'logging/config.py',
         'site-packages/README',
         'lib2to3/__main__.py',
         'lib2to3/btm_matcher.py',
         'lib2to3/main.py',
         'lib2to3/btm_utils.py',
         'lib2to3/fixer_base.py',
         'lib2to3/pygram.py',
         'lib2to3/__init__.py',
         'lib2to3/pytree.py',
         'lib2to3/fixer_util.py',
         'lib2to3/patcomp.py',
         'lib2to3/Grammar3.3.5.final.0.pickle',
         'lib2to3/PatternGrammar3.3.5.final.0.pickle',
         'lib2to3/PatternGrammar.txt',
         'lib2to3/Grammar.txt',
         'lib2to3/refactor.py',
         'lib2to3/fixes/fix_metaclass.py',
         'lib2to3/fixes/fix_throw.py',
         'lib2to3/fixes/fix_callable.py',
         'lib2to3/fixes/fix_urllib.py',
         'lib2to3/fixes/fix_execfile.py',
         'lib2to3/fixes/fix_exitfunc.py',
         'lib2to3/fixes/fix_map.py',
         'lib2to3/fixes/fix_xrange.py',
         'lib2to3/fixes/fix_renames.py',
         'lib2to3/fixes/fix_numliterals.py',
         'lib2to3/fixes/fix_input.py',
         'lib2to3/fixes/fix_print.py',
         'lib2to3/fixes/fix_operator.py',
         'lib2to3/fixes/fix_next.py',
         'lib2to3/fixes/fix_import.py',
         'lib2to3/fixes/fix_ne.py',
         'lib2to3/fixes/fix_long.py',
         'lib2to3/fixes/fix_paren.py',
         'lib2to3/fixes/fix_sys_exc.py',
         'lib2to3/fixes/fix_repr.py',
         'lib2to3/fixes/__init__.py',
         'lib2to3/fixes/fix_xreadlines.py',
         'lib2to3/fixes/fix_standarderror.py',
         'lib2to3/fixes/fix_itertools.py',
         'lib2to3/fixes/fix_types.py',
         'lib2to3/fixes/fix_raise.py',
         'lib2to3/fixes/fix_unicode.py',
         'lib2to3/fixes/fix_tuple_params.py',
         'lib2to3/fixes/fix_imports2.py',
         'lib2to3/fixes/fix_basestring.py',
         'lib2to3/fixes/fix_dict.py',
         'lib2to3/fixes/fix_nonzero.py',
         'lib2to3/fixes/fix_future.py',
         'lib2to3/fixes/fix_intern.py',
         'lib2to3/fixes/fix_idioms.py',
         'lib2to3/fixes/fix_raw_input.py',
         'lib2to3/fixes/fix_set_literal.py',
         'lib2to3/fixes/fix_filter.py',
         'lib2to3/fixes/fix_itertools_imports.py',
         'lib2to3/fixes/fix_zip.py',
         'lib2to3/fixes/fix_methodattrs.py',
         'lib2to3/fixes/fix_isinstance.py',
         'lib2to3/fixes/fix_ws_comma.py',
         'lib2to3/fixes/fix_getcwdu.py',
         'lib2to3/fixes/fix_imports.py',
         'lib2to3/fixes/fix_buffer.py',
         'lib2to3/fixes/fix_apply.py',
         'lib2to3/fixes/fix_except.py',
         'lib2to3/fixes/fix_exec.py',
         'lib2to3/fixes/fix_has_key.py',
         'lib2to3/fixes/fix_funcattrs.py',
         'lib2to3/fixes/fix_reduce.py',
         'lib2to3/pgen2/grammar.py',
         'lib2to3/pgen2/literals.py',
         'lib2to3/pgen2/__init__.py',
         'lib2to3/pgen2/conv.py',
         'lib2to3/pgen2/driver.py',
         'lib2to3/pgen2/tokenize.py',
         'lib2to3/pgen2/parse.py',
         'lib2to3/pgen2/pgen.py',
         'lib2to3/pgen2/token.py',
         'curses/textpad.py',
         'curses/__init__.py',
         'curses/panel.py',
         'curses/has_key.py',
         'curses/ascii.py',
         'venv/__main__.py',
         'venv/__init__.py',
         'venv/scripts/posix/activate',
         'encodings/johab.py',
         'encodings/base64_codec.py',
         'encodings/cp424.py',
         'encodings/iso2022_jp_2.py',
         'encodings/euc_kr.py',
         'encodings/bz2_codec.py',
         'encodings/cp855.py',
         'encodings/iso8859_13.py',
         'encodings/iso2022_jp_1.py',
         'encodings/mbcs.py',
         'encodings/cp858.py',
         'encodings/utf_7.py',
         'encodings/mac_arabic.py',
         'encodings/raw_unicode_escape.py',
         'encodings/unicode_internal.py',
         'encodings/iso8859_11.py',
         'encodings/cp863.py',
         'encodings/cp1006.py',
         'encodings/cp949.py',
         'encodings/cp1257.py',
         'encodings/cp500.py',
         'encodings/iso2022_jp_3.py',
         'encodings/iso8859_8.py',
         'encodings/zlib_codec.py',
         'encodings/cp950.py',
         'encodings/latin_1.py',
         'encodings/iso8859_1.py',
         'encodings/palmos.py',
         'encodings/iso8859_4.py',
         'encodings/cp852.py',
         'encodings/gbk.py',
         'encodings/mac_iceland.py',
         'encodings/cp720.py',
         'encodings/utf_8_sig.py',
         'encodings/iso8859_15.py',
         'encodings/hz.py',
         'encodings/charmap.py',
         'encodings/cp866.py',
         'encodings/iso8859_3.py',
         'encodings/mac_centeuro.py',
         'encodings/mac_turkish.py',
         'encodings/mac_farsi.py',
         'encodings/cp857.py',
         'encodings/utf_8.py',
         'encodings/iso2022_jp_ext.py',
         'encodings/uu_codec.py',
         'encodings/iso8859_2.py',
         'encodings/mac_greek.py',
         'encodings/cp1251.py',
         'encodings/__init__.py',
         'encodings/big5hkscs.py',
         'encodings/iso8859_7.py',
         'encodings/utf_16.py',
         'encodings/cp860.py',
         'encodings/hex_codec.py',
         'encodings/ptcp154.py',
         'encodings/big5.py',
         'encodings/iso8859_9.py',
         'encodings/shift_jis_2004.py',
         'encodings/cp874.py',
         'encodings/cp932.py',
         'encodings/hp_roman8.py',
         'encodings/cp862.py',
         'encodings/utf_16_be.py',
         'encodings/cp869.py',
         'encodings/unicode_escape.py',
         'encodings/cp1026.py',
         'encodings/cp1256.py',
         'encodings/cp856.py',
         'encodings/cp1252.py',
         'encodings/cp1253.py',
         'encodings/utf_32.py',
         'encodings/punycode.py',
         'encodings/tis_620.py',
         'encodings/cp737.py',
         'encodings/cp1254.py',
         'encodings/cp850.py',
         'encodings/cp861.py',
         'encodings/rot_13.py',
         'encodings/mac_roman.py',
         'encodings/cp1250.py',
         'encodings/euc_jisx0213.py',
         'encodings/aliases.py',
         'encodings/utf_16_le.py',
         'encodings/cp775.py',
         'encodings/utf_32_be.py',
         'encodings/euc_jp.py',
         'encodings/iso8859_6.py',
         'encodings/mac_croatian.py',
         'encodings/cp1258.py',
         'encodings/cp1140.py',
         'encodings/shift_jisx0213.py',
         'encodings/idna.py',
         'encodings/euc_jis_2004.py',
         'encodings/cp037.py',
         'encodings/ascii.py',
         'encodings/cp875.py',
         'encodings/cp65001.py',
         'encodings/quopri_codec.py',
         'encodings/utf_32_le.py',
         'encodings/cp1255.py',
         'encodings/cp865.py',
         'encodings/gb18030.py',
         'encodings/iso2022_jp_2004.py',
         'encodings/iso2022_jp.py',
         'encodings/shift_jis.py',
         'encodings/mac_cyrillic.py',
         'encodings/koi8_r.py',
         'encodings/undefined.py',
         'encodings/mac_latin2.py',
         'encodings/mac_romanian.py',
         'encodings/gb2312.py',
         'encodings/cp864.py',
         'encodings/iso2022_kr.py',
         'encodings/iso8859_14.py',
         'encodings/koi8_u.py',
         'encodings/iso8859_5.py',
         'encodings/iso8859_10.py',
         'encodings/iso8859_16.py',
         'encodings/cp437.py',
         'pydoc_data/_pydoc.css',
         'pydoc_data/__init__.py',
         'pydoc_data/topics.py',
         'collections/__main__.py',
         'collections/__init__.py',
         'collections/abc.py',
         'plat-linux/regen',
         'plat-linux/IN.py',
         'plat-linux/DLFCN.py',
         'plat-linux/TYPES.py',
         'plat-linux/CDROM.py',
         'email/_encoded_words.py',
         'email/_policybase.py',
         'email/header.py',
         'email/charset.py',
         'email/feedparser.py',
         'email/headerregistry.py',
         'email/architecture.rst',
         'email/message.py',
         'email/parser.py',
         'email/_parseaddr.py',
         'email/__init__.py',
         'email/encoders.py',
         'email/utils.py',
         'email/policy.py',
         'email/generator.py',
         'email/base64mime.py',
         'email/_header_value_parser.py',
         'email/errors.py',
         'email/iterators.py',
         'email/quoprimime.py',
         'email/mime/image.py',
         'email/mime/audio.py',
         'email/mime/application.py',
         'email/mime/base.py',
         'email/mime/message.py',
         'email/mime/__init__.py',
         'email/mime/multipart.py',
         'email/mime/nonmultipart.py',
         'email/mime/text.py',
    ]


    files_libs = ['libpython3.3m']

    files_devel = [
         '*.h', 'lib/libpython3.3m.a',
         'lib/pkgconfig/python-3.3.pc',
    ]

    files_bins = [
         '2to3', 'pyvenv-3.3', 'pydoc3', 'python3.3', 'python3.3m-config',
         'python3', '2to3-3.3', 'python3.3-config', 'idle3', 'pydoc3.3', 'idle3.3',
         'python3-config', 'python3.3m', 'pyvenv', 'python'
    ]


    def prepare(self):
        if not self.config.variants.python3:
            raise InvalidRecipeError(self, "The variant python3 is not enabled")

        url_prefix = 'https://www.python.org/ftp/python/%(self.version)s/'
        if self.config.target_platform != Platform.WINDOWS:
            self.url = url_prefix + "Python-%(self.version)s.tar.xz"
        else:
            self.url = url_prefix + "python-%(self.version)s.amd64.msi"

    def extract(self):
        if self.config.target_platform != Platform.WINDOWS:
            super(recipe.Recipe, self).extract()
        else:
            # extract msi
            if not os.path.exists(self.build_dir):
                os.makedirs(self.build_dir)

            destination = self.build_dir.replace("/", "\\")
            msi_file = self.download_path.split("/")[-1]
            extract_tpl = 'msiexec.exe /a %s TARGETDIR=%s /q /log msiexec.log'
            extract_command = extract_tpl % (msi_file, destination)
            download_path = self.download_path.replace(msi_file, "")
            bat_path = os.path.join(download_path, "extract.bat")
            bat_file = open(bat_path, "w")
            bat_file.write(extract_command)
            bat_file.close()
            shell.call("cd %s && cmd //c extract.bat" % download_path)

    def configure(self):
        if self.config.target_platform != Platform.WINDOWS:
            super(recipe.Recipe, self).configure()

    def compile(self):
        if self.config.target_platform != Platform.WINDOWS:
            super(recipe.Recipe, self).compile()

    def install_file(self, file, target):
        shutil.copy(
            os.path.join(self.build_dir, file),
            os.path.join(self.config.prefix, *target))

    def install_dir(source, target):
        if os.path.exists(target):
            shutil.rmtree(target)

        shutil.copytree(
            os.path.join(self.build_dir, source),
            os.path.join(self.config.prefix, *target))

    def install(self):
        self.install_file("python.exe", ["bin", "python.exe"])
        self.install_file("python.exe", ["bin", "python3.exe"])
        self.install_file("python33.dll", ["bin", "python33.dll"])
        self.install_file("python33.dll", ["lib", "python.dll"])
        self.install_file("python33.dll", ["lib", "python33.dll"])
        self.install_dir("include", ["include", "python3.3m"])
        self.install_dir("Lib", ["lib", "python3.3"])
        self.install_dir("libs", ["lib", "python3.3", "lib-dynload"])

    def post_install(self):
        if self.config.target_platform == Platform.WINDOWS:
            return

        # Make sure it is the default python in our environment
        try:
            os.symlink(os.path.join(self.config.prefix, "bin", "python3"),
                       os.path.join(self.config.prefix, "bin", "python"))
        except OSError:
            pass
